{"version":3,"sources":["data.js","store/reducer.js","store/store.js","copmonents/contacts/header/index.js","copmonents/contacts/dialogs/index.js","copmonents/contacts/index.js","copmonents/chat/header.js/index.js","copmonents/chat/message/checkbox/index.js","copmonents/chat/message/index.js","copmonents/chat/messageForm/index.js","copmonents/chat/index.js","copmonents/signIn/index.js","App.js","reportWebVitals.js","index.js"],"names":["setData","data","localStorage","setItem","JSON","stringify","getData","parse","getItem","accounts","id","name","surname","token","login","password","usersData","dialogs","messages","user","checked","message","date","Date","Reducer","state","action","type","dialog","currentDialog","stateCopy","chat","currentAccount","accountId","stateRemove","newMessages","index","filter","item","stateCopy1","messageIndex","initialState","Context","createContext","Store","children","useReducer","dispatch","useEffect","checkStorage","e","newValue","window","addEventListener","removeEventListener","Provider","value","Header","useContext","className","Dialogs","userName","split","map","x","join","onClick","selectedDialog","length","Contacts","dataUser","userNameAvatar","find","Checkbox","height","width","src","alt","onChange","messagesLength","Message","messagesEndRef","useRef","scroll","current","scrollHeight","clientHeight","scrollTo","ref","htmlFor","Moment","format","MessageForm","useState","inputValue","setInputValue","onSubmit","event","preventDefault","findIndex","target","Chat","SignIn","setLogin","setPassword","alertSign","setAlertSign","handleSubmit","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85e913cf.chunk.js","sourcesContent":["const setData = (data) => {\n  localStorage.setItem(\"user\", JSON.stringify(data));\n};\nconst getData = JSON.parse(localStorage.getItem(\"user\"));\n\nconst accounts = [\n  {\n    id: 0,\n    name: \"Евгений\",\n    surname: \"Заверзин\",\n    token: \"qwe\",\n    login: \"123\",\n    password: \"123\",\n  },\n  {\n    id: 1,\n    name: \"Александр\",\n    surname: \"Восторов\",\n    token: \"asd\",\n    login: \"1234\",\n    password: \"1234\",\n  },\n  {\n    id: 2,\n    name: \"Егор\",\n    token: \"zxc\",\n    surname: \"Иванов\",\n    login: \"12345\",\n    password: \"12345\",\n  },\n];\n\nconst usersData = [\n  {\n    dialogs: [\n      {\n        id: 0,\n        name: \"Александр\",\n        surname: \"Восторов\",\n        token: \"asd\",\n        messages: [\n          {\n            id: 0,\n            user: true,\n            checked: false,\n            message:\n              \"Mы дадим рекомендации по ремонту автомобиля. Вы можете сразу доверить нам\",\n            date: new Date(\"2021-10-28 9:15\"),\n          },\n          {\n            id: 1,\n            checked: false,\n            message: \"ими произошел конфликт на бытовой почве, в ходе которого\",\n            date: new Date(\"2021-10-28 9:20\"),\n          },\n          {\n            id: 2,\n            checked: false,\n            message:\n              \"Напомним, что ранее редактор Bloomberg Марк Гурман заявил, что Apple представит Apple M1X уже\",\n            date: new Date(\"2021-10-28 9:37\"),\n          },\n          {\n            id: 3,\n            user: true,\n            checked: false,\n            message: \"Новые абоненты оператора могут подключить тариф\",\n            date: new Date(\"2021-10-28 10:33\"),\n          },\n        ],\n      },\n      {\n        id: 1,\n        name: \"Егор\",\n        surname: \"Иванов\",\n        token: \"zxc\",\n        messages: [],\n      },\n    ],\n  },\n  {\n    dialogs: [\n      {\n        id: 0,\n        name: \"Евгений\",\n        surname: \"Заверзин\",\n        token: \"qwe\",\n        messages: [\n          {\n            id: 0,\n            checked: false,\n            message:\n              \"Mы дадим рекомендации по ремонту автомобиля. Вы можете сразу доверить нам\",\n            date: new Date(\"2021-10-28 9:15\"),\n          },\n          {\n            id: 1,\n            user: true,\n            checked: false,\n            message: \"ими произошел конфликт на бытовой почве, в ходе которого\",\n            date: new Date(\"2021-10-28 9:20\"),\n          },\n          {\n            id: 2,\n            user: true,\n            checked: false,\n            message:\n              \"Напомним, что ранее редактор Bloomberg Марк Гурман заявил, что Apple представит Apple M1X уже\",\n            date: new Date(\"2021-10-28 9:37\"),\n          },\n          {\n            id: 3,\n            checked: false,\n            message: \"Новые абоненты оператора могут подключить тариф\",\n            date: new Date(\"2021-10-28 10:33\"),\n          },\n        ],\n      },\n      {\n        id: 1,\n        name: \"Егор\",\n        surname: \"Иванов\",\n        token: \"zxc\",\n        messages: [],\n      },\n    ],\n  },\n  {\n    dialogs: [\n      {\n        id: 0,\n        name: \"Александр\",\n        surname: \"Восторов\",\n        token: \"asd\",\n        messages: [],\n      },\n      {\n        id: 1,\n        name: \"Евгений\",\n        surname: \"Заверзин\",\n        token: \"qwe\",\n        messages: [],\n      },\n    ],\n  },\n];\n\nexport { accounts, getData, setData, usersData };\n","import { setData } from \"../data\";\n\nconst Reducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_DIALOG\":\n      return {\n        ...state,\n        dialog: action.currentDialog,\n      };\n\n    case \"ADD_MESSAGE\":\n      const stateCopy = { ...state };\n      stateCopy.chat[state.currentAccount.id].dialogs[\n        stateCopy.dialog.id\n      ].messages = [\n        ...state.chat[state.currentAccount.id].dialogs[stateCopy.dialog.id]\n          .messages,\n        {\n          id: action.id,\n          date: action.date,\n          user: action.user,\n          message: action.message,\n          checked: action.checked,\n        },\n      ];\n      // Adds a message to the user you are writing to\n      stateCopy.chat[action.accountId].dialogs[stateCopy.dialog.id].messages = [\n        ...state.chat[action.accountId].dialogs[stateCopy.dialog.id].messages,\n        {\n          id: action.id,\n          date: action.date,\n          message: action.message,\n          checked: action.checked,\n        },\n      ];\n      setData(stateCopy.chat);\n      return {\n        ...stateCopy,\n      };\n\n    case \"REMOVE_MESSAGE\":\n      const stateRemove = { ...state };\n      const newMessages = stateRemove.chat[state.currentAccount.id].dialogs[\n        action.index\n      ].messages.filter((item) => !item.checked);\n      stateRemove.chat[state.currentAccount.id].dialogs[action.index].messages =\n        newMessages;\n      setData(stateRemove.chat);\n      return {\n        ...stateRemove,\n      };\n\n    case \"CHECK_MESSAGE\":\n      const stateCopy1 = { ...state };\n      stateCopy1.chat[state.currentAccount.id].dialogs[\n        stateCopy1.dialog.id\n      ].messages[action.messageIndex].checked = action.checked;\n      return {\n        ...stateCopy1,\n      };\n\n    case \"CURRENT_ACCOUNT\":\n      return {\n        ...state,\n        currentAccount: action.currentAccount,\n      };\n\n    case \"UPDATE_STATE\":\n      return {\n        ...state,\n        chat: action.state,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import { createContext, useReducer } from \"react\";\nimport Reducer from \"./reducer\";\nimport { usersData, setData, getData } from \"../data\";\nimport { useEffect } from \"react\";\n\nconst initialState = {\n  chat: usersData,\n};\n\nconst Store = ({ children }) => {\n  const [state, dispatch] = useReducer(Reducer, initialState);\n\n  useEffect(() => {\n    const checkStorage = (e) => {\n      if (e.newValue) {\n        dispatch({\n          type: \"UPDATE_STATE\",\n          state: JSON.parse(e.newValue),\n        });\n      }\n    };\n    \n    if (getData) {\n      dispatch({\n        type: \"UPDATE_STATE\",\n        state: getData,\n      });\n    } else {\n      setData(state.chat);\n    }\n\n    window.addEventListener(\"storage\", checkStorage);\n\n    return () => window.removeEventListener(\"storage\", checkStorage);\n  }, []);\n\n  return (\n    <Context.Provider value={[state, dispatch]}>{children}</Context.Provider>\n  );\n};\n\nexport const Context = createContext(initialState);\n\nexport default Store;\n","import { useContext } from \"react\";\nimport { Context } from \"../../../store/store\";\n\nconst Header = () => {\n  const [state] = useContext(Context);\n  return (\n    <div className=\"header__contacts\">\n      <p className=\"user__name__text\">\n        {state.currentAccount.name + \" \" + state.currentAccount.surname}\n      </p>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useContext } from \"react\";\nimport { Context } from \"../../../store/store\";\n\nconst Dialogs = () => {\n  const [state, dispatch] = useContext(Context);\n\n  const selectedDialog = (item) => {\n    dispatch({ type: \"UPDATE_DIALOG\", currentDialog: item });\n  };\n\n  const userName = (item) =>\n    item.name\n      .split(\" \")\n      .map((x) => x[0])\n      .join(\"\") +\n    item.surname\n      .split(\" \")\n      .map((x) => x[0])\n          .join(\"\");\n    \n  return (\n    <div className=\"dialogs\">\n      {state.chat[state.currentAccount.id].dialogs.map((item, index) => (\n        <div\n          className={`${state.dialog?.id === index && \"dialog__active\"} dialog`}\n          key={index}\n          onClick={() => {\n            selectedDialog(item);\n          }}\n        >\n          <div className=\"avatar\">\n            <b>{userName(item)}</b>\n          </div>\n          <div className=\"user\">\n            <div className=\"user__name__date\">\n              <p className=\"user__name__text\">\n                {item.name + \" \" + item.surname}\n              </p>\n              <p className=\"user__date__text\">пятница</p>\n            </div>\n            {item.messages && (\n              <div className=\"user__dialog\">\n                <p className=\"user__dialog__text\">\n                  {item.messages[item.messages.length - 1]?.message}\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import Header from \"./header\";\nimport Dialogs from \"./dialogs\";\nimport \"./index.css\";\n\nconst Contacts = () => {\n  return (\n    <div className=\"contacts\">\n      <Header />\n      <Dialogs />\n    </div>\n  );\n};\n\nexport default Contacts;\n","import \"../index.css\";\nimport { useContext } from \"react\";\nimport { Context } from \"../../../store/store\";\n\nexport const Header = () => {\n  const [state, dispatch] = useContext(Context);\n\n  const dataUser =\n    state.chat[state.currentAccount.id].dialogs[state.dialog?.id];\n\n  const userName = dataUser?.name + \" \" + dataUser?.surname;\n\n  const userNameAvatar =\n    dataUser?.name\n      .split(\" \")\n      .map((x) => x[0])\n      .join(\"\") +\n    dataUser?.surname\n      .split(\" \")\n      .map((x) => x[0])\n      .join(\"\");\n\n  //  Deleting the selected message\n  const checkboxRemove = (index) => {\n    dispatch({\n      type: \"REMOVE_MESSAGE\",\n      index,\n    });\n  };\n\n  return (\n    <div className=\"header__chat\">\n      {/* Display first and last names if dialog is selected */}\n      {state.chat[state.currentAccount.id].dialogs[state.dialog?.id] && (\n        <div className=\"header__name\">\n          <div className=\"header__avatar\">\n            <b>{userNameAvatar}</b>\n          </div>\n          <p className=\"user__name__text\">{userName}</p>\n        </div>\n      )}\n      {/* Displays the delete button if at least one checkbox is true */}\n      {state.dialog?.messages.find((item) => item.checked === true) && (\n        <div className=\"dialogs_delete\">\n          <button\n            className=\"dialog__button_remove\"\n            onClick={() => checkboxRemove(state.dialog.id)}\n          >\n            Удалить\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Header;\n","import { useContext } from \"react\";\nimport { Context } from \"../../../../store/store\";\n\nconst Checkbox = ({ item, index }) => {\n  const [, dispatch] = useContext(Context);\n\n  const checkMessage = (messageIndex, checked) => {\n    dispatch({\n      type: \"CHECK_MESSAGE\",\n      messageIndex,\n      checked,\n    });\n  };\n  \n  return (\n    <div className=\"container__icon\">\n      <img\n        height=\"16px\"\n        width=\"16px\"\n        src=\"/images/check-mark.png\"\n        alt=\"checkbox\"\n        className={item.checked ? \"checkbox__image_checked\" : \"checkbox__image\"}\n      />\n      <input\n        id={index}\n        className=\"input__checkbox\"\n        type=\"checkbox\"\n        checked={item.checked}\n        onChange={() => {\n          checkMessage(index, !item.checked);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Checkbox;\n","import { useContext, useRef, useEffect } from \"react\";\nimport { Context } from \"../../../store/store\";\nimport Moment from \"moment\";\nimport Checkbox from \"./checkbox\";\n\nlet messagesLength = 0;\n\nconst Message = () => {\n  const [state] = useContext(Context);\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    if (state.dialog?.messages?.length !== messagesLength) {\n      const scroll =\n        messagesEndRef.current.scrollHeight -\n        messagesEndRef.current.clientHeight;\n      messagesEndRef.current.scrollTo(0, scroll);\n      messagesLength = state.dialog?.messages?.length;\n    }\n  };\n\n  useEffect(scrollToBottom, [state]);\n\n  return (\n    <div ref={messagesEndRef} className=\"dialog__users\">\n      {/* Show messages if dialog is selected */}\n      {state.dialog &&\n        state.chat[state.currentAccount.id]?.dialogs[\n          state.dialog.id\n        ].messages?.map((item, index) => (\n          <label htmlFor={index} key={index} className=\"dialog__container\">\n            <div\n              className={`message__position ${\n                item.user ? \"message__right\" : \"message__left\"\n              } ${item.checked && \"message_selected\"}`}\n            >\n              <Checkbox item={item} index={index} />\n              <div\n                className={`message__container ${\n                  item.checked && \" message_selected\"\n                }`}\n              >\n                <p className=\"message__users\">{item.message}</p>\n                <p className=\"message__date\">\n                  {Moment(item.date).format(\"HH:mm \")}\n                </p>\n              </div>\n            </div>\n          </label>\n        ))}\n      {/* Shows if there are no messages with the user */}\n      {state.dialog && state.dialog.messages?.length === 0 && (\n        <div className=\"dialog__empty\">\n          <p className=\"empty__message\">\n            С этим пользователем вы не переписывались\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Message;\n","import { useContext, useState } from \"react\";\nimport { Context } from \"../../../store/store\";\nimport { accounts } from \"../../../data\";\n\nconst MessageForm = () => {\n  const [state, dispatch] = useContext(Context);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (inputValue.length > 0) {\n      dispatch({\n        type: \"ADD_MESSAGE\",\n        id: state.chat[state.currentAccount.id].dialogs[state.dialog.id]\n          .messages.length,\n        date: new Date(),\n        user: true,\n        message: inputValue,\n        checked: false,\n        accountId: accounts.findIndex(\n          (item) => item.token === state.dialog?.token\n        ),\n      });\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"input\">\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={(event) => setInputValue(event.target.value)}\n        className=\"dialog__input\"\n      />\n      <button type=\"submit\" className=\"input__button\">\n        <img src=\"/images/send-button.png\" alt=\"send button\" />\n      </button>\n    </form>\n  );\n};\n\nexport default MessageForm;\n","import Header from \"./header.js\";\nimport Message from \"./message\";\nimport \"./index.css\";\nimport MessageForm from \"./messageForm/index.js\";\n\nexport const Chat = () => {\n  return (\n    <div className=\"chat\">\n      <Header />\n      <Message />\n      <MessageForm />\n    </div>\n  );\n};\n\nexport default Chat;\n","import { Context } from \"../../store/store\";\nimport { useContext, useState } from \"react\";\nimport { accounts } from \"../../data\";\nimport \"../../App.css\";\n\nconst SignIn = () => {\n  const [, dispatch] = useContext(Context);\n  const [login, setLogin] = useState(\"123\");\n  const [password, setPassword] = useState(\"123\");\n  const [alertSign, setAlertSign] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    //  Checking the account for existence in the database\n    const currentAccount = accounts.find(\n      (item) => item.login === login && item.password === password\n    );\n\n    if (currentAccount) {\n      dispatch({\n        type: \"CURRENT_ACCOUNT\",\n        currentAccount,\n      });\n      setLogin(\"\");\n      setPassword(\"\");\n    } else {\n      setAlertSign(\"Неверный логин или пароль\");\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit} className=\"signIn__form\">\n      <div className=\"signIn\">\n        <label className=\"signIn__label\">Логин</label>\n        <input\n          className=\"signIn__input\"\n          type=\"text\"\n          value={login}\n          onChange={(e) => setLogin(e.target.value)}\n        />\n        <label className=\"signIn__label\">Пароль</label>\n        <input\n          className=\"signIn__input\"\n          type=\"text\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button\n          className=\"signIn__button\"\n          onClick={(event) => handleSubmit(event)}\n          type=\"submit\"\n        >\n          Войти\n        </button>\n        {alertSign && <p>{alertSign}</p>}\n      </div>\n    </form>\n  );\n};\nexport default SignIn;\n","import { useContext } from \"react\";\nimport { Context } from \"./store/store\";\nimport Contacts from \"./copmonents/contacts\";\nimport Chat from \"./copmonents/chat\";\nimport SignIn from \"./copmonents/signIn\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [state] = useContext(Context);\n  return (\n    <div className=\"App\">\n      {state.currentAccount ? (\n        <>\n          <Contacts />\n          <Chat />\n        </>\n      ) : (\n        <SignIn />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Store>\n      <App />\n    </Store>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}